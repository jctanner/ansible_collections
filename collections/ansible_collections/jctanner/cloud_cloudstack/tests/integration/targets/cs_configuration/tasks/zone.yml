---
- name: test configuration zone
  jctanner.cloud_cloudstack.cs_configuration:
    name: use.external.dns
    zone: "{{ test_jctanner.cloud_cloudstack.cs_configuration_zone }}"
    value: false
  register: config
- name: verify test configuration zone
  assert:
    that:
    - config is successful

- name: test update configuration zone
  jctanner.cloud_cloudstack.cs_configuration:
    name: use.external.dns
    zone: "{{ test_jctanner.cloud_cloudstack.cs_configuration_zone }}"
    value: true
  register: config
- name: verify update configuration zone
  assert:
    that:
    - config is successful
    - config is changed
    - config.value == "true"
    - config.name == "use.external.dns"
    - config.scope == "zone"
    - config.zone == "{{ test_jctanner.cloud_cloudstack.cs_configuration_zone }}"

- name: test update configuration zone idempotence
  jctanner.cloud_cloudstack.cs_configuration:
    name: use.external.dns
    zone: "{{ test_jctanner.cloud_cloudstack.cs_configuration_zone }}"
    value: true
  register: config
- name: verify update configuration zone idempotence
  assert:
    that:
    - config is successful
    - config is not changed
    - config.value == "true"
    - config.name == "use.external.dns"
    - config.scope == "zone"
    - config.zone == "{{ test_jctanner.cloud_cloudstack.cs_configuration_zone }}"

- name: test reset configuration zone
  jctanner.cloud_cloudstack.cs_configuration:
    name: use.external.dns
    zone: "{{ test_jctanner.cloud_cloudstack.cs_configuration_zone }}"
    value: false
  register: config
- name: verify reset configuration zone
  assert:
    that:
    - config is successful
    - config is changed
    - config.value == "false"
    - config.name == "use.external.dns"
    - config.scope == "zone"
    - config.zone == "{{ test_jctanner.cloud_cloudstack.cs_configuration_zone }}"
