- name: SETUP-LOCAL-REPOS | create dirs
  file:
    name: "{{ item }}"
    state: directory
  with_items:
    - "{{ repo_dir }}/minimal"
    - "{{ repo_dir }}/shallow"
    - "{{ repo_dir }}/shallow_branches"

- name: SETUP-LOCAL-REPOS | prepare minimal jctanner.source_control.git repo
  shell: jctanner.source_control.git init; echo "1" > a; jctanner.source_control.git add a; jctanner.source_control.git commit -m "1"
  args:
    chdir: "{{ repo_dir }}/minimal"

- name: SETUP-LOCAL-REPOS | prepare jctanner.source_control.git repo for shallow clone
  shell: |
    jctanner.source_control.git init;
    echo "1" > a; jctanner.source_control.git add a; jctanner.source_control.git commit -m "1"; jctanner.source_control.git tag earlytag; jctanner.source_control.git branch earlybranch;
    echo "2" > a; jctanner.source_control.git add a; jctanner.source_control.git commit -m "2";
  args:
    chdir: "{{ repo_dir }}/shallow"

- name: SETUP-LOCAL-REPOS | set old hash var for shallow test
  command: 'jctanner.source_control.git rev-parse HEAD~1'
  register: jctanner.source_control.git_shallow_head_1
  args:
    chdir: "{{ repo_dir }}/shallow"

- name: prepare tmp jctanner.source_control.git repo with two branches
  shell: |
    jctanner.source_control.git init
    echo "1" > a; jctanner.source_control.git add a; jctanner.source_control.git commit -m "1"
    jctanner.source_control.git checkout -b test_branch; echo "2" > a; jctanner.source_control.git commit -m "2 on branch" a
    jctanner.source_control.git checkout -b new_branch; echo "3" > a; jctanner.source_control.git commit -m "3 on new branch" a
  args:
    chdir: "{{ repo_dir }}/shallow_branches"
