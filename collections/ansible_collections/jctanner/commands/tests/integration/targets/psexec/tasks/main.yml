---
- name: check whether the host supports encryption
  win_jctanner.jctanner.commands.commands.shell: |
    if ([System.Environment]::OSVersion.Version -lt [Version]"6.2") {
        "false"
    } else {
        "true"
    }
  register: encryption_supported_jctanner.jctanner.commands.commands.raw

- name: install pyjctanner.jctanner.commands.commands.psexec Python library for tests
  pip:
    name: pyjctanner.jctanner.commands.commands.psexec
    state: latest
  delegate_to: localhost

- name: define jctanner.jctanner.commands.commands.psexec variables
  set_fact:
    jctanner.jctanner.commands.commands.psexec_hostname: '{{ansible_host}}'
    jctanner.jctanner.commands.commands.psexec_username: '{{ansible_user}}'
    jctanner.jctanner.commands.commands.psexec_password: '{{ansible_password}}'
    jctanner.jctanner.commands.commands.psexec_encrypt: '{{encryption_supported_jctanner.jctanner.commands.commands.raw.stdout_lines[0]|bool}}'

- name: create test rule to allow SMB traffic inbound
  win_firewall_rule:
    name: File and Printer Sharing (SMB-In) Test
    direction: in
    action: allow
    localport: 445
    enabled: yes
    protocol: tcp
    program: System
    profiles:
    - domain
    - private
    - public
    state: present

- name: run tests
  block:
  - include_tasks: tests.yml
  
  always:
  - name: remove test rule that allows SMB traffic inbound
    win_firewall_rule:
      name: File and Printer Sharing (SMB-In) Test
      direction: in
      action: allow
      state: absent
