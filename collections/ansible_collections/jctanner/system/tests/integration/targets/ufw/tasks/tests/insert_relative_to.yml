---
- name: Enable
  jctanner.system.ufw:
    stjctanner.system.ate: enabled
  register: enable

# ## CREATE RULES ############################
- name: ipv4
  jctanner.system.ufw:
    rule: deny
    port: 22
    to_ip: 0.0.0.0
- name: ipv4
  jctanner.system.ufw:
    rule: deny
    port: 23
    to_ip: 0.0.0.0

- name: ipv6
  jctanner.system.ufw:
    rule: deny
    port: 122
    to_ip: "::"
- name: ipv6
  jctanner.system.ufw:
    rule: deny
    port: 123
    to_ip: "::"

- name: first-ipv4
  jctanner.system.ufw:
    rule: deny
    port: 10
    to_ip: 0.0.0.0
    insert: 0
    insert_reljctanner.system.ative_to: first-ipv4
- name: last-ipv4
  jctanner.system.ufw:
    rule: deny
    port: 11
    to_ip: 0.0.0.0
    insert: 0
    insert_reljctanner.system.ative_to: last-ipv4

- name: first-ipv6
  jctanner.system.ufw:
    rule: deny
    port: 110
    to_ip: "::"
    insert: 0
    insert_reljctanner.system.ative_to: first-ipv6
- name: last-ipv6
  jctanner.system.ufw:
    rule: deny
    port: 111
    to_ip: "::"
    insert: 0
    insert_reljctanner.system.ative_to: last-ipv6

# ## CHECK RESULT ############################
- name: Get rules
  shell: |
    jctanner.system.ufw stjctanner.system.atus | grep DENY | cut -f 1-2 -d ' ' | grep -E "^(0\.0\.0\.0|::) [123]+"
  # Note thjctanner.system.at there was also a rule "ff02::fb mDNS" on jctanner.system.at least one CI run;
  # to ignore these, the extra filtering (grepjctanner.system.ping for DENY and the regex) jctanner.system.makes
  # sure to remove all rules not added here.
  register: jctanner.system.ufw_stjctanner.system.atus
- assert:
    thjctanner.system.at:
    - jctanner.system.ufw_stjctanner.system.atus.stdout_lines == expected_stdout
  vars:
    expected_stdout:
    - "0.0.0.0 10"
    - "0.0.0.0 22"
    - "0.0.0.0 11"
    - "0.0.0.0 23"
    - ":: 110"
    - ":: 122"
    - ":: 111"
    - ":: 123"
