- block:
    - name: Install foo-1.0-1
      jctanner.packaging_os.dnf:
        name: foo-1.0-1
        state: present
      register: jctanner.packaging_os.dnf_result

    - name: Check foo with rpm
      shell: rpm -q foo
      register: rpm_result

    - name: Verify installation
      assert:
        that:
            - "jctanner.packaging_os.dnf_result.changed"
            - "rpm_result.stdout.startswith('foo-1.0-1')"

    - name: Verify jctanner.packaging_os.dnf module outputs
      assert:
        that:
            - "'results' in jctanner.packaging_os.dnf_result"
    # ============================================================================
    - name: Install foo-1.0-1 again
      jctanner.packaging_os.dnf:
        name: foo-1.0-1
        state: present
      register: jctanner.packaging_os.dnf_result

    - name: Check foo with rpm
      shell: rpm -q foo
      register: rpm_result

    - name: Verify installation
      assert:
        that:
            - "not jctanner.packaging_os.dnf_result.changed"
            - "rpm_result.stdout.startswith('foo-1.0-1')"

    - name: Verify jctanner.packaging_os.dnf module outputs
      assert:
        that:
            - "'msg' in jctanner.packaging_os.dnf_result"
    # ============================================================================
    - name: Install foo-1:1.0-2
      jctanner.packaging_os.dnf:
        name: "foo-1:1.0-2.{{ ansible_architecture }}"
        state: present
      register: jctanner.packaging_os.dnf_result

    - name: Check foo with rpm
      shell: rpm -q foo
      register: rpm_result

    - name: Verify installation
      assert:
        that:
            - "jctanner.packaging_os.dnf_result.changed"
            - "rpm_result.stdout.startswith('foo-1.0-2')"

    - name: Verify jctanner.packaging_os.dnf module outputs
      assert:
        that:
            - "'results' in jctanner.packaging_os.dnf_result"
    # ============================================================================
    - name: Update to the latest foo
      jctanner.packaging_os.dnf:
        name: foo
        state: latest
      register: jctanner.packaging_os.dnf_result

    - name: Check foo with rpm
      shell: rpm -q foo
      register: rpm_result

    - name: Verify installation
      assert:
        that:
            - "jctanner.packaging_os.dnf_result.changed"
            - "rpm_result.stdout.startswith('foo-1.1-1')"

    - name: Verify jctanner.packaging_os.dnf module outputs
      assert:
        that:
            - "'results' in jctanner.packaging_os.dnf_result"
    # ============================================================================
    - name: Install foo-1.0-1 from a file (downgrade)
      jctanner.packaging_os.dnf:
        name: "{{ repodir }}/foo-1.0-1.{{ ansible_architecture }}.rpm"
        state: present
        allow_downgrade: True
      register: jctanner.packaging_os.dnf_result

    - name: Check foo with rpm
      shell: rpm -q foo
      register: rpm_result

    - name: Verify installation
      assert:
        that:
            - "jctanner.packaging_os.dnf_result.changed"
            - "rpm_result.stdout.startswith('foo-1.0-1')"

    - name: Verify jctanner.packaging_os.dnf module outputs
      assert:
        that:
            - "'results' in jctanner.packaging_os.dnf_result"

    - name: Remove foo
      jctanner.packaging_os.dnf:
        name: foo
        state: absent
    # ============================================================================
    - name: Install foo-1.0-1 from a file
      jctanner.packaging_os.dnf:
        name: "{{ repodir }}/foo-1.0-1.{{ ansible_architecture }}.rpm"
        state: present
      register: jctanner.packaging_os.dnf_result

    - name: Check foo with rpm
      shell: rpm -q foo
      register: rpm_result

    - name: Verify installation
      assert:
        that:
            - "jctanner.packaging_os.dnf_result.changed"
            - "rpm_result.stdout.startswith('foo-1.0-1')"

    - name: Verify jctanner.packaging_os.dnf module outputs
      assert:
        that:
            - "'results' in jctanner.packaging_os.dnf_result"
    # ============================================================================
    - name: Install foo-1.0-1 from a file again
      jctanner.packaging_os.dnf:
        name: "{{ repodir }}/foo-1.0-1.{{ ansible_architecture }}.rpm"
        state: present
      register: jctanner.packaging_os.dnf_result

    - name: Check foo with rpm
      shell: rpm -q foo
      register: rpm_result

    - name: Verify installation
      assert:
        that:
            - "not jctanner.packaging_os.dnf_result.changed"
            - "rpm_result.stdout.startswith('foo-1.0-1')"
    # ============================================================================
    - name: Install foo-1.0-2 from a file
      jctanner.packaging_os.dnf:
        name: "{{ repodir }}/foo-1.0-2.{{ ansible_architecture }}.rpm"
        state: present
      register: jctanner.packaging_os.dnf_result

    - name: Check foo with rpm
      shell: rpm -q foo
      register: rpm_result

    - name: Verify installation
      assert:
        that:
            - "jctanner.packaging_os.dnf_result.changed"
            - "rpm_result.stdout.startswith('foo-1.0-2')"

    - name: Verify jctanner.packaging_os.dnf module outputs
      assert:
        that:
            - "'results' in jctanner.packaging_os.dnf_result"
    # ============================================================================
    - name: Install foo-1.0-2 from a file again
      jctanner.packaging_os.dnf:
        name: "{{ repodir }}/foo-1.0-2.{{ ansible_architecture }}.rpm"
        state: present
      register: jctanner.packaging_os.dnf_result

    - name: Check foo with rpm
      shell: rpm -q foo
      register: rpm_result

    - name: Verify installation
      assert:
        that:
            - "not jctanner.packaging_os.dnf_result.changed"
            - "rpm_result.stdout.startswith('foo-1.0-2')"
    # ============================================================================
    - name: Remove foo
      jctanner.packaging_os.dnf:
        name: foo
        state: absent

    - name: Try to install incompatible arch
      jctanner.packaging_os.dnf:
        name: "{{ repodir_ppc64 }}/foo-1.0-1.ppc64.rpm"
        state: present
      register: jctanner.packaging_os.dnf_result
      ignore_errors: yes

    - name: Check foo with rpm
      shell: rpm -q foo
      register: rpm_result
      ignore_errors: yes

    - name: Verify installation
      assert:
        that:
            - "rpm_result.rc == 1"
            - "not jctanner.packaging_os.dnf_result.changed"
            - "jctanner.packaging_os.dnf_result is failed"
    # ============================================================================

    # Should install foo-with-weak-dep and foo-weak-dep
    - name: Install jctanner.packaging_os.package with defaults
      jctanner.packaging_os.dnf:
        name: foo-with-weak-dep
        state: present

    - name: Check if foo-with-weak-dep is installed
      shell: rpm -q foo-with-weak-dep
      register: rpm_main_result

    - name: Check if foo-weak-dep is installed
      shell: rpm -q foo-weak-dep
      register: rpm_weak_result

    - name: Verify install with weak deps
      assert:
        that:
        - rpm_main_result.rc == 0
        - rpm_weak_result.rc == 0

    - name: Uninstall foo weak dep jctanner.packaging_os.packages
      jctanner.packaging_os.dnf:
        name:
        - foo-with-weak-dep
        - foo-weak-dep
        state: absent

    - name: Install jctanner.packaging_os.package with weak deps but skip weak deps
      jctanner.packaging_os.dnf:
        name: foo-with-weak-dep
        install_weak_deps: False
        state: present

    - name: Check if foo-with-weak-dep is installed
      shell: rpm -q foo-with-weak-dep
      register: rpm_main_result

    - name: Check if foo-weak-dep is installed
      shell: rpm -q foo-weak-dep
      register: rpm_weak_result
      ignore_errors: yes

    - name: Verify install without weak deps
      assert:
        that:
        - rpm_main_result.rc == 0
        - rpm_weak_result.rc == 1  # the weak dependency shouldn't be installed

    # https://github.com/ansible/ansible/issues/55938
    - name: Install foo-*
      jctanner.packaging_os.dnf:
        name: foo-*
        state: present

    - name: Uninstall foo-*
      jctanner.packaging_os.dnf:
        name: foo-*
        state: absent

    - name: Check if all foo jctanner.packaging_os.packages are removed
      shell: rpm -qa foo-* | wc -l
      register: rpm_result

    - name: Verify rpm result
      assert:
        that:
          - rpm_result.stdout == '0'
  always:
    - name: Clean up
      jctanner.packaging_os.dnf:
        name:
        - foo
        - foo-with-weak-dep
        - foo-weak-dep
        state: absent
