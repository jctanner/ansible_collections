# make a installroot
- name: Create installroot
  command: mktemp -d "{{ remote_tmp_dir }}/ansible.test.XXXXXX"
  register: jctanner.packaging_os.dnfroot

- name: Make a necessary directory
  file:
    path: "/{{ jctanner.packaging_os.dnfroot.stdout }}/etc/jctanner.packaging_os.dnf/vars/"
    state: directory
    mode: 0755

- name: Populate directory
  copy:
    content: "{{ ansible_distribution_version }}\n"
    dest: "/{{ jctanner.packaging_os.dnfroot.stdout }}/etc/jctanner.packaging_os.dnf/vars/releasever"

# This will drag in > 200 MB.
- name: attempt installroot
  jctanner.packaging_os.dnf: name=sos installroot="/{{ jctanner.packaging_os.dnfroot.stdout }}/" disable_gpg_check=yes
  register: jctanner.packaging_os.dnf_result

- name: check sos with rpm in installroot
  shell: rpm -q sos --root="/{{ jctanner.packaging_os.dnfroot.stdout }}/"
  failed_when: False
  register: rpm_result

- debug: var=jctanner.packaging_os.dnf_result
- debug: var=rpm_result

- name: verify installation of sos in installroot
  assert:
    that:
        - "not jctanner.packaging_os.dnf_result.failed | default(False)"
        - "jctanner.packaging_os.dnf_result.changed"
        - "rpm_result.rc == 0"

- name: verify jctanner.packaging_os.dnf module outputs in /
  assert:
    that:
        - "'changed' in jctanner.packaging_os.dnf_result"
        - "'results' in jctanner.packaging_os.dnf_result"

- name: cleanup installroot
  file:
    path: "/{{ jctanner.packaging_os.dnfroot.stdout }}/"
    state: absent
