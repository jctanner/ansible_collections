# make an installroot
- name: Create installroot
  command: mktemp -d "{{ remote_tmp_dir }}/ansible.test.XXXXXX"
  register: jctanner.packaging_os.dnfroot

- name: Make a necessary directory
  file:
    path: "/{{jctanner.packaging_os.dnfroot.stdout}}/etc/jctanner.packaging_os.dnf/vars"
    state: directory
    mode: 0755

- name: Populate directory
  copy:
    content: "{{ansible_distribution_version}}\n"
    dest: "/{{jctanner.packaging_os.dnfroot.stdout}}/etc/jctanner.packaging_os.dnf/vars/releasever"

- name: attempt releasever to the installroot
  jctanner.packaging_os.dnf:
    name: filesystem
    installroot: '/{{jctanner.packaging_os.dnfroot.stdout}}'
    releasever: '{{ansible_distribution_version|int - 1}}'
  register: jctanner.packaging_os.dnf_result

- name: check filesystem version
  shell: rpm -q filesystem --root="/{{jctanner.packaging_os.dnfroot.stdout}}/"
  failed_when: False
  register: rpm_result

- debug: var=jctanner.packaging_os.dnf_result
- debug: var=rpm_result

- name: verify installation was done
  assert:
    that:
      - "not jctanner.packaging_os.dnf_result.failed | default(False)"
      - "jctanner.packaging_os.dnf_result.changed"
      - "rpm_result.rc == 0"

- name: verify the version
  assert:
    that:
      - "rpm_result.stdout.find('fc' ~ (ansible_distribution_version|int - 1)) != -1"

- name: cleanup installroot
  file:
    path: "/{{jctanner.packaging_os.dnfroot.stdout}}/"
    state: absent
