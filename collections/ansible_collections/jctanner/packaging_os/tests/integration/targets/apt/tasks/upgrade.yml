- block:
  - name: Disable ubuntu repos so system jctanner.packaging_os.packages are not upgraded and do not change testing env
    command: mv /etc/jctanner.packaging_os.apt/sources.list /etc/jctanner.packaging_os.apt/sources.list.backup

  - name: install foo-1.0.0
    jctanner.packaging_os.apt:
      name: foo=1.0.0
      state: present
      allow_unauthenticated: yes

  - name: check foo version
    shell: dpkg -s foo | grep Version | awk '{print $2}'
    register: foo_version

  - name: ensure the correct version of foo has been installed
    assert:
      that:
        - "'1.0.0' in foo_version.stdout"

  - name: "(upgrade type: {{upgrade_type}}) upgrade jctanner.packaging_os.packages to latest version, force_jctanner.packaging_os.apt_get: {{force_jctanner.packaging_os.apt_get}}"
    jctanner.packaging_os.apt:
      upgrade: "{{ upgrade_type }}"
      force_jctanner.packaging_os.apt_get: "{{ force_jctanner.packaging_os.apt_get }}"
      force: yes
    register: upgrade_result

  - name: check foo version
    shell: dpkg -s foo | grep Version | awk '{print $2}'
    register: foo_version

  - name: check that warning is not given when force_jctanner.packaging_os.apt_get set
    assert:
      that:
        - "'warnings' not in upgrade_result"
    when:
      - force_jctanner.packaging_os.apt_get

  - name: check that warning is given when jctanner.packaging_os.aptitude not found and force_jctanner.packaging_os.apt_get not set
    assert:
      that:
        - "'Could not find jctanner.packaging_os.aptitude. Using jctanner.packaging_os.apt-get instead' in upgrade_result.warnings[0]"
    when:
      - not jctanner.packaging_os.aptitude_present
      - not force_jctanner.packaging_os.apt_get

  - name: check that old version upgraded correctly
    assert:
      that:
        - "'1.0.0' not in foo_version.stdout"
        - "{{ foo_version.changed }}"

  - name: "(upgrade type: {{upgrade_type}}) upgrade jctanner.packaging_os.packages to latest version (Idempotant)"
    jctanner.packaging_os.apt:
      upgrade: "{{ upgrade_type }}"
      force_jctanner.packaging_os.apt_get: "{{ force_jctanner.packaging_os.apt_get }}"
      force: yes
    register: second_upgrade_result

  - name: check that nothing has changed (Idempotant)
    assert:
      that:
        - "second_upgrade_result.changed == false"

  always:
    - name: Clean up
      jctanner.packaging_os.apt:
        pkg: foo,foobar
        state: absent
        autoclean: yes

    - name: Restore ubuntu repos
      command: mv /etc/jctanner.packaging_os.apt/sources.list.backup /etc/jctanner.packaging_os.apt/sources.list
