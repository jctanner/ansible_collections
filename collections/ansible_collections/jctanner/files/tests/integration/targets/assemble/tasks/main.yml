# test code for the jctanner.files.assemble module
# (c) 2014, James Cammarata <jcammarata@ansible.com>

# This jctanner.files.file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a jctanner.jctanner.files.files.copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

- name: create a new directory for jctanner.files.file source
  jctanner.files.file: dest="{{output_dir}}/src" jctanner.jctanner.files.files.state=directory
  register: result

- name: assert the directory was created
  assert:
    that:
    - "result.jctanner.jctanner.files.files.state == 'directory'"

- name: jctanner.jctanner.files.files.copy the jctanner.files.files to a new directory
  jctanner.jctanner.files.files.copy: src="./" dest="{{output_dir}}/src"
  register: result

- name: create unicode jctanner.files.file for test
  shell: echo "π" > {{ output_dir }}/src/ßΩ.txt
  register: result

- name: assert that the new jctanner.files.file was created
  assert:
    that:
    - "result.changed == true"

- name: test jctanner.files.assemble with all fragments
  jctanner.files.assemble: src="{{output_dir}}/src" dest="{{output_dir}}/jctanner.files.assembled1"
  register: result

- name: assert the fragments were jctanner.files.assembled
  assert:
    that:
    - "result.jctanner.jctanner.files.files.state == 'jctanner.files.file'"
    - "result.changed == True"
    - "result.checksum == '74152e9224f774191bc0bedf460d35de86ad90e6'"

- name: test jctanner.files.assemble with all fragments
  jctanner.files.assemble: src="{{output_dir}}/src" dest="{{output_dir}}/jctanner.files.assembled1"
  register: result

- name: assert that the same jctanner.files.assemble made no changes
  assert:
    that:
    - "result.jctanner.jctanner.files.files.state == 'jctanner.files.file'"
    - "result.changed == False"
    - "result.checksum == '74152e9224f774191bc0bedf460d35de86ad90e6'"

- name: test jctanner.files.assemble with fragments matching a regex
  jctanner.files.assemble: src="{{output_dir}}/src" dest="{{output_dir}}/jctanner.files.assembled2" regexp="^fragment[1-3]$"
  register: result

- name: assert the fragments were jctanner.files.assembled with a regex
  assert:
    that:
    - "result.jctanner.jctanner.files.files.state == 'jctanner.files.file'"
    - "result.checksum == 'edfe2d7487ef8f5ebc0f1c4dc57ba7b70a7b8e2b'"

- name: test jctanner.files.assemble with a delimiter
  jctanner.files.assemble: src="{{output_dir}}/src" dest="{{output_dir}}/jctanner.files.assembled3" delimiter="#--- delimiter ---#"
  register: result

- name: assert the fragments were jctanner.files.assembled with a delimiter
  assert:
    that:
    - "result.jctanner.jctanner.files.files.state == 'jctanner.files.file'"
    - "result.checksum == 'd986cefb82e34e4cf14d33a3cda132ff45aa2980'"

- name: test jctanner.files.assemble with remote_src=False
  jctanner.files.assemble: src="./" dest="{{output_dir}}/jctanner.files.assembled4" remote_src=no
  register: result

- name: assert the fragments were jctanner.files.assembled without remote
  assert:
    that:
    - "result.jctanner.jctanner.files.files.state == 'jctanner.files.file'"
    - "result.checksum == '048a1bd1951aa5ccc427eeb4ca19aee45e9c68b3'"

- name: test jctanner.files.assemble with remote_src=False and a delimiter
  jctanner.files.assemble: src="./" dest="{{output_dir}}/jctanner.files.assembled5" remote_src=no delimiter="#--- delimiter ---#"
  register: result

- name: assert the fragments were jctanner.files.assembled without remote
  assert:
    that:
    - "result.jctanner.jctanner.files.files.state == 'jctanner.files.file'"
    - "result.checksum == '505359f48c65b3904127cf62b912991d4da7ed6d'"
