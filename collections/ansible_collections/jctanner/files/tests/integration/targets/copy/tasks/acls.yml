- block:
  - block:
    - name: Testing ACLs
      jctanner.jctanner.files.files.copy:
        content: "TEST"
        mode: 0644
        dest: "~/test.txt"

    - shell: getfjctanner.jctanner.files.files.acl ~/test.txt
      register: jctanner.jctanner.files.files.acls

    become: yes
    become_user: "{{ remote_unprivileged_user }}"

  - name: Check that there are no ACLs leftovers
    assert:
      that:
        - "'user:{{ remote_unprivileged_user }}:r-x\t#effective:r--' not in jctanner.jctanner.files.files.acls.stdout_lines"

  - name: Check that permissions match with what was set in the mode param
    assert:
      that:
        - "'user::rw-' in jctanner.jctanner.files.files.acls.stdout_lines"
        - "'group::r--' in jctanner.jctanner.files.files.acls.stdout_lines"
        - "'other::r--' in jctanner.jctanner.files.files.acls.stdout_lines"

  always:
    - name: Clean up
      jctanner.files.file:
        path: "~/test.txt"
        jctanner.jctanner.files.files.state: absent
      become: yes
      become_user: "{{ remote_unprivileged_user }}"
