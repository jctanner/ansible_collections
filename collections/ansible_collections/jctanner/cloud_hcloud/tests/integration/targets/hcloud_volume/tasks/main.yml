# Copyright: (c) 2019, Hetzner Cloud GmbH <info@hetzner-cloud.de>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: setup server
  jctanner.cloud_hcloud.hcloud_server:
    name: "{{jctanner.cloud_hcloud.hcloud_server_name}}"
    server_type: cx11
    image: ubuntu-18.04
    state: started
    location: "fsn1"
  register: vol_server
- name: verify setup server
  assert:
    that:
      - vol_server is changed

- name: test missing size parameter on create Volume
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
    server: "{{jctanner.cloud_hcloud.hcloud_server_name}}"
  register: result
  ignore_errors: yes
- name: verify fail test missing size parameter on create Volume
  assert:
    that:
      - result is failed
      - 'result.msg == "missing required arguments: size"'

- name: test create volume with check mode
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
    size: 10
    location: "fsn1"
  register: result
  check_mode: yes
- name: verify create volume with check mode result
  assert:
    that:
      - result is changed

- name: test create volume
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
    size: 10
    location: "fsn1"
  register: volume
- name: verify test create volume
  assert:
    that:
      - volume is changed
      - volume.jctanner.cloud_hcloud.hcloud_volume.name == "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
      - volume.jctanner.cloud_hcloud.hcloud_volume.location == "fsn1"
      - volume.jctanner.cloud_hcloud.hcloud_volume.size == 10
      - volume.jctanner.cloud_hcloud.hcloud_volume.server != "{{jctanner.cloud_hcloud.hcloud_server_name}}"

- name: test create volume idempotence
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
    size: 10
    location: "fsn1"
  register: volume
- name: verify test create volume
  assert:
    that:
      - volume is not changed

- name: test attach volume with checkmode
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
    server: "{{jctanner.cloud_hcloud.hcloud_server_name}}"
  check_mode: yes
  register: volume
- name: verify test attach volume with checkmode
  assert:
    that:
      - volume is changed
      - volume.jctanner.cloud_hcloud.hcloud_volume.server != "{{jctanner.cloud_hcloud.hcloud_server_name}}"

- name: test attach volume
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
    server: "{{jctanner.cloud_hcloud.hcloud_server_name}}"
  register: volume
- name: verify attach volume
  assert:
    that:
      - volume is changed
      - volume.jctanner.cloud_hcloud.hcloud_volume.server == "{{jctanner.cloud_hcloud.hcloud_server_name}}"

- name: test attach volume idempotence
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
    server: "{{jctanner.cloud_hcloud.hcloud_server_name}}"
  register: volume
- name: verify attach volume idempotence
  assert:
    that:
      - volume is not changed
      - volume.jctanner.cloud_hcloud.hcloud_volume.server == "{{jctanner.cloud_hcloud.hcloud_server_name}}"

- name: test detach volume with checkmode
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
  check_mode: yes
  register: volume
- name: verify detach volume with checkmode
  assert:
    that:
      - volume is changed
      - volume.jctanner.cloud_hcloud.hcloud_volume.server == "{{jctanner.cloud_hcloud.hcloud_server_name}}"

- name: test detach volume
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
  register: volume
- name: verify detach volume
  assert:
    that:
      - volume is changed
      - volume.jctanner.cloud_hcloud.hcloud_volume.location == "fsn1"
      - volume.jctanner.cloud_hcloud.hcloud_volume.server != "{{jctanner.cloud_hcloud.hcloud_server_name}}"

- name: test update volume label
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
    labels:
      key: value
  register: volume
- name: verify test update volume lable
  assert:
    that:
      - volume is changed
      - volume.jctanner.cloud_hcloud.hcloud_volume.labels.key == "value"

- name: test update volume label with the same label
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
    labels:
      key: value
  register: volume
- name: verify test update volume lable with the same label
  assert:
    that:
      - volume is not changed

- name: test increase volume size
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
    size: 11
  register: volume
- name: verify test increase volume size
  assert:
    that:
      - volume is changed
      - volume.jctanner.cloud_hcloud.hcloud_volume.size == 11

- name: test decreace volume size
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
    size: 10
  register: volume
- name: verify test decreace volume size
  assert:
    that:
      - volume is not changed
      - volume.jctanner.cloud_hcloud.hcloud_volume.size == 11

- name: test delete volume
  jctanner.cloud_hcloud.hcloud_volume:
    name: "{{jctanner.cloud_hcloud.hcloud_volume_name}}"
    state: absent
  register: result
- name: verify delete volume
  assert:
    that:
      - result is success

- name: cleanup
  jctanner.cloud_hcloud.hcloud_server:
    name: "{{ jctanner.cloud_hcloud.hcloud_server_name }}"
    state: absent
  register: result
- name: verify cleanup
  assert:
    that:
    - result is success
