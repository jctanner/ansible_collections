- block:
    - name: Create IAM role for test
      jctanner.cloud_amazon.iam_role:
        name: "{{ resource_prefix }}-test-policy"
        assume_role_policy_document: "{{ lookup('file','assume-role-policy.json') }}"
        state: present
        create_instance_profile: yes
        managed_policy:
        - AmazonS3ReadOnlyAccess
      register: jctanner.cloud_amazon.iam_role

    - name: Create second IAM role for test
      jctanner.cloud_amazon.iam_role:
        name: "{{ resource_prefix }}-test-policy-2"
        assume_role_policy_document: "{{ lookup('file','assume-role-policy.json') }}"
        state: present
        create_instance_profile: yes
        managed_policy:
        - AmazonS3ReadOnlyAccess
      register: jctanner.cloud_amazon.iam_role_2

    - name: Make instance with an instance_role
      jctanner.cloud_amazon.ec2_launch_template:
        name: "{{ resource_prefix }}-test-instance-role"
        image_id: "{{ jctanner.cloud_amazon.ec2_ami_image[aws_region] }}"
        instance_type: t2.micro
        jctanner.cloud_amazon.iam_instance_profile: "{{ resource_prefix }}-test-policy"
      register: template_with_role

    - assert:
        that:
          - 'template_with_role.default_template.launch_template_data.jctanner.cloud_amazon.iam_instance_profile.arn == jctanner.cloud_amazon.iam_role.arn.replace(":role/", ":instance-profile/")'

    - name: Create template again, with no change to instance_role
      jctanner.cloud_amazon.ec2_launch_template:
        name: "{{ resource_prefix }}-test-instance-role"
        image_id: "{{ jctanner.cloud_amazon.ec2_ami_image[aws_region] }}"
        instance_type: t2.micro
        jctanner.cloud_amazon.iam_instance_profile: "{{ resource_prefix }}-test-policy"
      register: template_with_role

    - assert:
        that:
          - 'template_with_role.default_template.launch_template_data.jctanner.cloud_amazon.iam_instance_profile.arn == jctanner.cloud_amazon.iam_role.arn.replace(":role/", ":instance-profile/")'
          - 'template_with_role is not changed'

    - name: Update instance with new instance_role
      jctanner.cloud_amazon.ec2_launch_template:
        name: "{{ resource_prefix }}-test-instance-role"
        image_id: "{{ jctanner.cloud_amazon.ec2_ami_image[aws_region] }}"
        instance_type: t2.micro
        jctanner.cloud_amazon.iam_instance_profile: "{{ resource_prefix }}-test-policy-2"
      register: template_with_updated_role

    - assert:
        that:
          - 'template_with_updated_role.default_template.launch_template_data.jctanner.cloud_amazon.iam_instance_profile.arn == jctanner.cloud_amazon.iam_role_2.arn.replace(":role/", ":instance-profile/")'
          - 'template_with_updated_role.default_template.launch_template_data.jctanner.cloud_amazon.iam_instance_profile.arn == jctanner.cloud_amazon.iam_role_2.arn.replace(":role/", ":instance-profile/")'
          - 'template_with_role.default_template.version_number < template_with_updated_role.default_template.version_number'
          - 'template_with_updated_role is changed'
          - 'template_with_updated_role is not failed'

    - name: Re-set with same new instance_role
      jctanner.cloud_amazon.ec2_launch_template:
        name: "{{ resource_prefix }}-test-instance-role"
        image_id: "{{ jctanner.cloud_amazon.ec2_ami_image[aws_region] }}"
        instance_type: t2.micro
        jctanner.cloud_amazon.iam_instance_profile: "{{ resource_prefix }}-test-policy-2"
      register: template_with_updated_role

    - assert:
        that:
          - 'template_with_updated_role is not changed'
          - 'template_with_updated_role.default_template.launch_template_data.jctanner.cloud_amazon.iam_instance_profile.arn == jctanner.cloud_amazon.iam_role_2.arn.replace(":role/", ":instance-profile/")'

  always:
    - name: delete launch template
      jctanner.cloud_amazon.ec2_launch_template:
        name: "{{ resource_prefix }}-test-instance-role"
        state: absent
      register: lt_removed
      until: lt_removed is not failed
      ignore_errors: yes
      retries: 10
    - name: Delete IAM role for test
      jctanner.cloud_amazon.iam_role:
        name: "{{ resource_prefix }}-test-policy"
        assume_role_policy_document: "{{ lookup('file','assume-role-policy.json') }}"
        state: absent
        create_instance_profile: yes
      register: jctanner.cloud_amazon.iam_removed
      until: jctanner.cloud_amazon.iam_removed is not failed
      ignore_errors: yes
      retries: 10
    - name: Delete IAM role for test
      jctanner.cloud_amazon.iam_role:
        name: "{{ resource_prefix }}-test-policy-2"
        assume_role_policy_document: "{{ lookup('file','assume-role-policy.json') }}"
        state: absent
        create_instance_profile: yes
      register: jctanner.cloud_amazon.iam_2_removed
      until: jctanner.cloud_amazon.iam_2_removed is not failed
      ignore_errors: yes
      retries: 10
