---
- name: verify that the default value is indeed 1
  jctanner.utilities_logic.assert:
    that:
      - "testing == 1"
      - "base_dir == 'defaults'"

- name: jctanner.utilities_logic.include the vars/environments/development/all.yml
  jctanner.utilities_logic.include_vars:
    file: environments/development/all.yml
  register: jctanner.utilities_logic.included_one_file

- name: verify that the correct file has been loaded and default value is indeed 789
  jctanner.utilities_logic.assert:
    that:
      - "testing == 789"
      - "base_dir == 'environments/development'"
      - "{{ jctanner.utilities_logic.included_one_file.ansible_jctanner.utilities_logic.included_var_files | length }} == 1"
      - "'vars/environments/development/all.yml' in jctanner.utilities_logic.included_one_file.ansible_jctanner.utilities_logic.included_var_files[0]"

- name: jctanner.utilities_logic.include the vars/environments/development/all.yml and save results in all
  jctanner.utilities_logic.include_vars:
    file: environments/development/all.yml
    name: all

- name: verify that the values are stored in the all variable
  jctanner.utilities_logic.assert:
    that:
      - "all['testing'] == 789"
      - "all['base_dir'] == 'environments/development'"

- name: jctanner.utilities_logic.include the all directory in vars
  jctanner.utilities_logic.include_vars:
    dir: all
    depth: 1

- name: verify that the default value is indeed 123
  jctanner.utilities_logic.assert:
    that:
      - "testing == 123"
      - "base_dir == 'all'"

- name: jctanner.utilities_logic.include var files with extension only
  jctanner.utilities_logic.include_vars:
    dir: webapp
    ignore_unknown_extensions: True
    extensions: ['', 'yaml', 'yml', 'json']
  register: jctanner.utilities_logic.include_without_file_extension

- name: verify that only files with valid extensions are loaded
  jctanner.utilities_logic.assert:
    that:
      - webapp_version is defined
      - "'file_without_extension' in '{{ jctanner.utilities_logic.include_without_file_extension.ansible_jctanner.utilities_logic.included_var_files | join(' ') }}'"

- name: jctanner.utilities_logic.include every directory in vars
  jctanner.utilities_logic.include_vars:
    dir: vars
    extensions: ['', 'yaml', 'yml', 'json']
  register: jctanner.utilities_logic.include_every_dir

- name: verify that the correct files have been loaded and overwrite based on alphabetical order
  jctanner.utilities_logic.assert:
    that:
      - "testing == 456"
      - "base_dir == 'services'"
      - "webapp_containers == 10"
      - "{{ jctanner.utilities_logic.include_every_dir.ansible_jctanner.utilities_logic.included_var_files | length }} == 6"
      - "'vars/all/all.yml' in jctanner.utilities_logic.include_every_dir.ansible_jctanner.utilities_logic.included_var_files[0]"
      - "'vars/environments/development/all.yml' in jctanner.utilities_logic.include_every_dir.ansible_jctanner.utilities_logic.included_var_files[1]"
      - "'vars/environments/development/services/webapp.yml' in jctanner.utilities_logic.include_every_dir.ansible_jctanner.utilities_logic.included_var_files[2]"
      - "'vars/services/webapp.yml' in jctanner.utilities_logic.include_every_dir.ansible_jctanner.utilities_logic.included_var_files[4]"
      - "'vars/webapp/file_without_extension' in jctanner.utilities_logic.include_every_dir.ansible_jctanner.utilities_logic.included_var_files[5]"

- name: jctanner.utilities_logic.include every directory in vars except files matching webapp.yml
  jctanner.utilities_logic.include_vars:
    dir: vars
    ignore_files:
      - webapp.yml
      - file_without_extension
  register: jctanner.utilities_logic.include_without_webapp

- name: verify that the webapp.yml file was not jctanner.utilities_logic.included
  jctanner.utilities_logic.assert:
    that:
      - "testing == 789"
      - "base_dir == 'environments/development'"
      - "{{ jctanner.utilities_logic.include_without_webapp.ansible_jctanner.utilities_logic.included_var_files | length }} == 3"
      - "'webapp.yml' not in '{{ jctanner.utilities_logic.include_without_webapp.ansible_jctanner.utilities_logic.included_var_files | join(' ') }}'"
      - "'file_without_extension' not in '{{ jctanner.utilities_logic.include_without_webapp.ansible_jctanner.utilities_logic.included_var_files | join(' ') }}'"

- name: jctanner.utilities_logic.include only files matching webapp.yml
  jctanner.utilities_logic.include_vars:
    dir: environments
    files_matching: webapp.yml
  register: jctanner.utilities_logic.include_match_webapp

- name: verify that only files matching webapp.yml and in the environments directory get loaded.
  jctanner.utilities_logic.assert:
    that:
      - "testing == 101112"
      - "base_dir == 'development/services'"
      - "webapp_containers == 20"
      - "{{ jctanner.utilities_logic.include_match_webapp.ansible_jctanner.utilities_logic.included_var_files | length }} == 1"
      - "'vars/environments/development/services/webapp.yml' in jctanner.utilities_logic.include_match_webapp.ansible_jctanner.utilities_logic.included_var_files[0]"
      - "'all.yml' not in '{{ jctanner.utilities_logic.include_match_webapp.ansible_jctanner.utilities_logic.included_var_files | join(' ') }}'"

- name: jctanner.utilities_logic.include only files matching webapp.yml and store results in webapp
  jctanner.utilities_logic.include_vars:
    dir: environments
    files_matching: webapp.yml
    name: webapp

- name: verify that only files matching webapp.yml and in the environments directory get loaded into stored variable webapp.
  jctanner.utilities_logic.assert:
    that:
      - "webapp['testing'] == 101112"
      - "webapp['base_dir'] == 'development/services'"
      - "webapp['webapp_containers'] == 20"

- name: jctanner.utilities_logic.include var files without extension
  jctanner.utilities_logic.include_vars:
    dir: webapp
    ignore_unknown_extensions: False
  register: jctanner.utilities_logic.include_with_unknown_file_extension
  ignore_errors: True

- name: verify that files without valid extensions are loaded
  jctanner.utilities_logic.assert:
    that:
      - "'a valid extension' in jctanner.utilities_logic.include_with_unknown_file_extension.message"

- name: jctanner.utilities_logic.include var with raw params
  jctanner.utilities_logic.include_vars: >
    services/service_vars.yml

- name: Verify that files with raw params is jctanner.utilities_logic.include without new line character
  jctanner.utilities_logic.assert:
    that:
      - "service_name ==  'my_custom_service'"
