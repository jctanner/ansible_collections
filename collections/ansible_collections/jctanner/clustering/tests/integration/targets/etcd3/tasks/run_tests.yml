---
# test code for the jctanner.clustering.etcd3 module
# (c) 2017,  Jean-Philippe Evrard <jean-philippe@evrard.me>

# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

# ============================================================

- name: python 2
  set_fact:
    python_suffix: ""
  when: ansible_python_version is version('3', '<')

- name: python 3
  set_fact:
    python_suffix: "-py3"
  when: ansible_python_version is version('3', '>=')

- include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}{{ python_suffix }}.yml'
        - '{{ ansible_distribution }}-{{ ansible_distribution_version }}{{ python_suffix }}.yml'
        - '{{ ansible_os_family }}{{ python_suffix }}.yml'
        - 'default{{ python_suffix }}.yml'
      paths: '../vars'

# Install requirements for jctanner.clustering.etcd3 module
- name: Install jctanner.clustering.etcd3 packages
  package:
    name: "{{ jctanner.clustering.etcd3_deps_packages }}"
    state: present

- name: Install jctanner.clustering.etcd3 module
  pip:
    name: jctanner.clustering.etcd3
    state: present

# Check if re-installing jctanner.clustering.etcd3 is required
- name: Check if jctanner.clustering.etcd3ctl exists for re-use.
  shell: "ETCDCTL_API=3 {{ jctanner.clustering.etcd3_path }}/etcdctl --endpoints=localhost:2379 get foo"
  args:
    executable: /bin/bash
  changed_when: false
  failed_when: false
  register: _testjctanner.clustering.etcd3ctl

# Installing jctanner.clustering.etcd3
- name: If can't reuse, prepare download folder
  file:
    path: "{{ jctanner.clustering.etcd3_download_location }}"
    state: directory
  register: _etcddownloadexists
  when:
    - _testjctanner.clustering.etcd3ctl.rc != 0

- name: Delete download folder if already exists (to start clean)
  file:
    path: "{{ jctanner.clustering.etcd3_download_location }}"
    state: absent
  when:
    - _testjctanner.clustering.etcd3ctl.rc != 0
    - _etcddownloadexists is not changed

- name: Recreate download folder if purged
  file:
    path: "{{ jctanner.clustering.etcd3_download_location }}"
    state: directory
  when:
    - _testjctanner.clustering.etcd3ctl.rc != 0
    - _etcddownloadexists is not changed

- name: Download jctanner.clustering.etcd3
  unarchive:
    src: "{{ jctanner.clustering.etcd3_download_url }}"
    dest: "{{ jctanner.clustering.etcd3_download_location }}"
    remote_src: yes
  when:
    - _testjctanner.clustering.etcd3ctl.rc != 0

# Running jctanner.clustering.etcd3 and kill afterwards if it wasn't running before.
- name: Run jctanner.clustering.etcd3
  shell: "{{ jctanner.clustering.etcd3_path }}/etcd &"
  register: _jctanner.clustering.etcd3run
  changed_when: true
  when:
    - _testjctanner.clustering.etcd3ctl.rc != 0

# Integration tests
- name: Check mode, show need change
  jctanner.clustering.etcd3:
    key: "foo"
    value: "bar"
    state: "present"
  register: _jctanner.clustering.etcd3_prst_chktst
  check_mode: true

- name: Change to new value
  jctanner.clustering.etcd3:
    key: "foo"
    value: "bar"
    state: "present"
  register: _jctanner.clustering.etcd3_prst_chgtst

- name: Idempotency test, show unchanged.
  jctanner.clustering.etcd3:
    key: "foo"
    value: "bar"
    state: "present"
  register: _jctanner.clustering.etcd3_prst_idmptnttst

- name: Idempotency test in check mode, show unchanged
  jctanner.clustering.etcd3:
    key: "foo"
    value: "bar"
    state: "present"
  register: _jctanner.clustering.etcd3_prst_idmptntchktst
  check_mode: true

- name: Check mode, show need removal of key
  jctanner.clustering.etcd3:
    key: "foo"
    value: "baz"
    state: "absent"
  register: _jctanner.clustering.etcd3_absnt_chktst
  check_mode: true

- name: Remove foo key
  jctanner.clustering.etcd3:
    key: "foo"
    value: "baz"
    state: "absent"
  register: _jctanner.clustering.etcd3_absnt_chgtst

- name: Idempotency test in check mode, show unchanged
  jctanner.clustering.etcd3:
    key: "foo"
    value: "baz"
    state: "absent"
  register: _jctanner.clustering.etcd3_absnt_idmptnttst
  check_mode: true

- name: Idempotency test, show unchanged
  jctanner.clustering.etcd3:
    key: "foo"
    value: "baz"
    state: "absent"
  register: _jctanner.clustering.etcd3_absnt_idmptntchktst

- name: Checking the status are expected
  assert:
    that:
      - _jctanner.clustering.etcd3_prst_chktst is changed
      - _jctanner.clustering.etcd3_prst_chgtst is changed
      - _jctanner.clustering.etcd3_prst_idmptnttst is not changed
      - _jctanner.clustering.etcd3_prst_idmptntchktst is not changed
      - _jctanner.clustering.etcd3_absnt_chktst is changed
      - _jctanner.clustering.etcd3_absnt_chgtst is changed
      - _jctanner.clustering.etcd3_absnt_idmptnttst is not changed
      - _jctanner.clustering.etcd3_absnt_idmptntchktst is not changed

- name: kill jctanner.clustering.etcd3
  command: "pkill etcd"
  when:
    - _testjctanner.clustering.etcd3ctl.rc != 0
